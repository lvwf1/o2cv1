#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace O2V1DataAccess.Criteria
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataMart")]
	public partial class CriteriaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertO2CVQuery(O2CVQuery instance);
    partial void UpdateO2CVQuery(O2CVQuery instance);
    partial void DeleteO2CVQuery(O2CVQuery instance);
    partial void InsertO2CVQueryCriteria(O2CVQueryCriteria instance);
    partial void UpdateO2CVQueryCriteria(O2CVQueryCriteria instance);
    partial void DeleteO2CVQueryCriteria(O2CVQueryCriteria instance);
    #endregion
		
		public CriteriaDataContext() : 
				base(global::O2V1DataAccess.Properties.Settings.Default.DataMartConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public CriteriaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CriteriaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CriteriaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CriteriaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<O2CVQuery> O2CVQueries
		{
			get
			{
				return this.GetTable<O2CVQuery>();
			}
		}
		
		public System.Data.Linq.Table<O2CVQueryCriteria> O2CVQueryCriterias
		{
			get
			{
				return this.GetTable<O2CVQueryCriteria>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.O2CVQueries")]
	public partial class O2CVQuery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QueryName;
		
		private long _Id;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private string _Description;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private string _DeletedBy;
		
		private EntitySet<O2CVQueryCriteria> _O2CVQueryCriterias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQueryNameChanging(string value);
    partial void OnQueryNameChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    #endregion
		
		public O2CVQuery()
		{
			this._O2CVQueryCriterias = new EntitySet<O2CVQueryCriteria>(new Action<O2CVQueryCriteria>(this.attach_O2CVQueryCriterias), new Action<O2CVQueryCriteria>(this.detach_O2CVQueryCriterias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string QueryName
		{
			get
			{
				return this._QueryName;
			}
			set
			{
				if ((this._QueryName != value))
				{
					this.OnQueryNameChanging(value);
					this.SendPropertyChanging();
					this._QueryName = value;
					this.SendPropertyChanged("QueryName");
					this.OnQueryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(50)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="O2CVQuery_O2CVQueryCriteria", Storage="_O2CVQueryCriterias", ThisKey="Id", OtherKey="CriteriaParentQueryId")]
		public EntitySet<O2CVQueryCriteria> O2CVQueryCriterias
		{
			get
			{
				return this._O2CVQueryCriterias;
			}
			set
			{
				this._O2CVQueryCriterias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_O2CVQueryCriterias(O2CVQueryCriteria entity)
		{
			this.SendPropertyChanging();
			entity.O2CVQuery = this;
		}
		
		private void detach_O2CVQueryCriterias(O2CVQueryCriteria entity)
		{
			this.SendPropertyChanging();
			entity.O2CVQuery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.O2CVQueryCriteria")]
	public partial class O2CVQueryCriteria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Sequence;
		
		private string _TableColumn;
		
		private string _TableName;
		
		private string _CompareValue;
		
		private string _CompareOperator;
		
		private string _Description;
		
		private System.Nullable<long> _CriteriaParentQueryId;
		
		private string _Name;
		
		private System.Nullable<bool> _Disabled;
		
		private System.Nullable<System.DateTime> _DisabledDate;
		
		private string _DisableBy;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<O2CVQuery> _O2CVQuery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnTableColumnChanging(string value);
    partial void OnTableColumnChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnCompareValueChanging(string value);
    partial void OnCompareValueChanged();
    partial void OnCompareOperatorChanging(string value);
    partial void OnCompareOperatorChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCriteriaParentQueryIdChanging(System.Nullable<long> value);
    partial void OnCriteriaParentQueryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisabledChanging(System.Nullable<bool> value);
    partial void OnDisabledChanged();
    partial void OnDisabledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDisabledDateChanged();
    partial void OnDisableByChanging(string value);
    partial void OnDisableByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public O2CVQueryCriteria()
		{
			this._O2CVQuery = default(EntityRef<O2CVQuery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableColumn", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableColumn
		{
			get
			{
				return this._TableColumn;
			}
			set
			{
				if ((this._TableColumn != value))
				{
					this.OnTableColumnChanging(value);
					this.SendPropertyChanging();
					this._TableColumn = value;
					this.SendPropertyChanged("TableColumn");
					this.OnTableColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareValue", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CompareValue
		{
			get
			{
				return this._CompareValue;
			}
			set
			{
				if ((this._CompareValue != value))
				{
					this.OnCompareValueChanging(value);
					this.SendPropertyChanging();
					this._CompareValue = value;
					this.SendPropertyChanged("CompareValue");
					this.OnCompareValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareOperator", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompareOperator
		{
			get
			{
				return this._CompareOperator;
			}
			set
			{
				if ((this._CompareOperator != value))
				{
					this.OnCompareOperatorChanging(value);
					this.SendPropertyChanging();
					this._CompareOperator = value;
					this.SendPropertyChanged("CompareOperator");
					this.OnCompareOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriteriaParentQueryId", DbType="BigInt")]
		public System.Nullable<long> CriteriaParentQueryId
		{
			get
			{
				return this._CriteriaParentQueryId;
			}
			set
			{
				if ((this._CriteriaParentQueryId != value))
				{
					if (this._O2CVQuery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCriteriaParentQueryIdChanging(value);
					this.SendPropertyChanging();
					this._CriteriaParentQueryId = value;
					this.SendPropertyChanged("CriteriaParentQueryId");
					this.OnCriteriaParentQueryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit")]
		public System.Nullable<bool> Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisabledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisabledDate
		{
			get
			{
				return this._DisabledDate;
			}
			set
			{
				if ((this._DisabledDate != value))
				{
					this.OnDisabledDateChanging(value);
					this.SendPropertyChanging();
					this._DisabledDate = value;
					this.SendPropertyChanged("DisabledDate");
					this.OnDisabledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableBy", DbType="NVarChar(50)")]
		public string DisableBy
		{
			get
			{
				return this._DisableBy;
			}
			set
			{
				if ((this._DisableBy != value))
				{
					this.OnDisableByChanging(value);
					this.SendPropertyChanging();
					this._DisableBy = value;
					this.SendPropertyChanged("DisableBy");
					this.OnDisableByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="O2CVQuery_O2CVQueryCriteria", Storage="_O2CVQuery", ThisKey="CriteriaParentQueryId", OtherKey="Id", IsForeignKey=true)]
		public O2CVQuery O2CVQuery
		{
			get
			{
				return this._O2CVQuery.Entity;
			}
			set
			{
				O2CVQuery previousValue = this._O2CVQuery.Entity;
				if (((previousValue != value) 
							|| (this._O2CVQuery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._O2CVQuery.Entity = null;
						previousValue.O2CVQueryCriterias.Remove(this);
					}
					this._O2CVQuery.Entity = value;
					if ((value != null))
					{
						value.O2CVQueryCriterias.Add(this);
						this._CriteriaParentQueryId = value.Id;
					}
					else
					{
						this._CriteriaParentQueryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("O2CVQuery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
