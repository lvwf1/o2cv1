#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace O2V1DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataMart")]
	public partial class O2DataMartLinqToSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBackBone(BackBone instance);
    partial void UpdateBackBone(BackBone instance);
    partial void DeleteBackBone(BackBone instance);
    partial void InsertQuery(Query instance);
    partial void UpdateQuery(Query instance);
    partial void DeleteQuery(Query instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertCosUser(CosUser instance);
    partial void UpdateCosUser(CosUser instance);
    partial void DeleteCosUser(CosUser instance);
    partial void InsertCount(Count instance);
    partial void UpdateCount(Count instance);
    partial void DeleteCount(Count instance);
    partial void InsertCountsTemplate(CountsTemplate instance);
    partial void UpdateCountsTemplate(CountsTemplate instance);
    partial void DeleteCountsTemplate(CountsTemplate instance);
    partial void InsertCountsUser(CountsUser instance);
    partial void UpdateCountsUser(CountsUser instance);
    partial void DeleteCountsUser(CountsUser instance);
    partial void InsertHomeValueRange(HomeValueRange instance);
    partial void UpdateHomeValueRange(HomeValueRange instance);
    partial void DeleteHomeValueRange(HomeValueRange instance);
    partial void InsertInterestRateType(InterestRateType instance);
    partial void UpdateInterestRateType(InterestRateType instance);
    partial void DeleteInterestRateType(InterestRateType instance);
    partial void InsertLoanAmountRange(LoanAmountRange instance);
    partial void UpdateLoanAmountRange(LoanAmountRange instance);
    partial void DeleteLoanAmountRange(LoanAmountRange instance);
    partial void InsertLoanToValueRange(LoanToValueRange instance);
    partial void UpdateLoanToValueRange(LoanToValueRange instance);
    partial void DeleteLoanToValueRange(LoanToValueRange instance);
    partial void InsertLoanType(LoanType instance);
    partial void UpdateLoanType(LoanType instance);
    partial void DeleteLoanType(LoanType instance);
    partial void InsertMortgage(Mortgage instance);
    partial void UpdateMortgage(Mortgage instance);
    partial void DeleteMortgage(Mortgage instance);
    partial void InsertMortgateType(MortgateType instance);
    partial void UpdateMortgateType(MortgateType instance);
    partial void DeleteMortgateType(MortgateType instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertProperty(Property instance);
    partial void UpdateProperty(Property instance);
    partial void DeleteProperty(Property instance);
    partial void InsertPropertyValueRange(PropertyValueRange instance);
    partial void UpdatePropertyValueRange(PropertyValueRange instance);
    partial void DeletePropertyValueRange(PropertyValueRange instance);
    partial void InsertStreetDirection(StreetDirection instance);
    partial void UpdateStreetDirection(StreetDirection instance);
    partial void DeleteStreetDirection(StreetDirection instance);
    partial void InsertTableFile(TableFile instance);
    partial void UpdateTableFile(TableFile instance);
    partial void DeleteTableFile(TableFile instance);
    partial void InsertFeedDetail(FeedDetail instance);
    partial void UpdateFeedDetail(FeedDetail instance);
    partial void DeleteFeedDetail(FeedDetail instance);
    partial void InsertFeed(Feed instance);
    partial void UpdateFeed(Feed instance);
    partial void DeleteFeed(Feed instance);
    partial void InsertO2CVQuery(O2CVQuery instance);
    partial void UpdateO2CVQuery(O2CVQuery instance);
    partial void DeleteO2CVQuery(O2CVQuery instance);
    partial void InsertO2CVQueryCriteria(O2CVQueryCriteria instance);
    partial void UpdateO2CVQueryCriteria(O2CVQueryCriteria instance);
    partial void DeleteO2CVQueryCriteria(O2CVQueryCriteria instance);
    #endregion
		
		public O2DataMartLinqToSqlDataContext() : 
				base(global::O2V1DataAccess.Properties.Settings.Default.DataMartConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public O2DataMartLinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public O2DataMartLinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public O2DataMartLinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public O2DataMartLinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BackBone> BackBones
		{
			get
			{
				return this.GetTable<BackBone>();
			}
		}
		
		public System.Data.Linq.Table<Query> Queries
		{
			get
			{
				return this.GetTable<Query>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<CosUser> CosUsers
		{
			get
			{
				return this.GetTable<CosUser>();
			}
		}
		
		public System.Data.Linq.Table<County> Counties
		{
			get
			{
				return this.GetTable<County>();
			}
		}
		
		public System.Data.Linq.Table<Count> Counts
		{
			get
			{
				return this.GetTable<Count>();
			}
		}
		
		public System.Data.Linq.Table<CountsTemplate> CountsTemplates
		{
			get
			{
				return this.GetTable<CountsTemplate>();
			}
		}
		
		public System.Data.Linq.Table<CountsUser> CountsUsers
		{
			get
			{
				return this.GetTable<CountsUser>();
			}
		}
		
		public System.Data.Linq.Table<HomeValueRange> HomeValueRanges
		{
			get
			{
				return this.GetTable<HomeValueRange>();
			}
		}
		
		public System.Data.Linq.Table<InterestRateType> InterestRateTypes
		{
			get
			{
				return this.GetTable<InterestRateType>();
			}
		}
		
		public System.Data.Linq.Table<LoanAmountRange> LoanAmountRanges
		{
			get
			{
				return this.GetTable<LoanAmountRange>();
			}
		}
		
		public System.Data.Linq.Table<LoanToValueRange> LoanToValueRanges
		{
			get
			{
				return this.GetTable<LoanToValueRange>();
			}
		}
		
		public System.Data.Linq.Table<LoanType> LoanTypes
		{
			get
			{
				return this.GetTable<LoanType>();
			}
		}
		
		public System.Data.Linq.Table<Mortgage> Mortgages
		{
			get
			{
				return this.GetTable<Mortgage>();
			}
		}
		
		public System.Data.Linq.Table<MortgateType> MortgateTypes
		{
			get
			{
				return this.GetTable<MortgateType>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Property> Properties
		{
			get
			{
				return this.GetTable<Property>();
			}
		}
		
		public System.Data.Linq.Table<PropertyValueRange> PropertyValueRanges
		{
			get
			{
				return this.GetTable<PropertyValueRange>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<StreetDirection> StreetDirections
		{
			get
			{
				return this.GetTable<StreetDirection>();
			}
		}
		
		public System.Data.Linq.Table<TableFile> TableFiles
		{
			get
			{
				return this.GetTable<TableFile>();
			}
		}
		
		public System.Data.Linq.Table<FeedDetail> FeedDetails
		{
			get
			{
				return this.GetTable<FeedDetail>();
			}
		}
		
		public System.Data.Linq.Table<Feed> Feeds
		{
			get
			{
				return this.GetTable<Feed>();
			}
		}
		
		public System.Data.Linq.Table<O2CVQuery> O2CVQueries
		{
			get
			{
				return this.GetTable<O2CVQuery>();
			}
		}
		
		public System.Data.Linq.Table<O2CVQueryCriteria> O2CVQueryCriterias
		{
			get
			{
				return this.GetTable<O2CVQueryCriteria>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BackBone")]
	public partial class BackBone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BackBoneId;
		
		private System.Guid _FeedId;
		
		private System.Guid _PropertyId;
		
		private System.Guid _PersonId;
		
		private int _PersonTrustPosition;
		
		private System.Guid _MortgageId;
		
		private int _MortgageTrustPosition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBackBoneIdChanging(System.Guid value);
    partial void OnBackBoneIdChanged();
    partial void OnFeedIdChanging(System.Guid value);
    partial void OnFeedIdChanged();
    partial void OnPropertyIdChanging(System.Guid value);
    partial void OnPropertyIdChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnPersonTrustPositionChanging(int value);
    partial void OnPersonTrustPositionChanged();
    partial void OnMortgageIdChanging(System.Guid value);
    partial void OnMortgageIdChanged();
    partial void OnMortgageTrustPositionChanging(int value);
    partial void OnMortgageTrustPositionChanged();
    #endregion
		
		public BackBone()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackBoneId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BackBoneId
		{
			get
			{
				return this._BackBoneId;
			}
			set
			{
				if ((this._BackBoneId != value))
				{
					this.OnBackBoneIdChanging(value);
					this.SendPropertyChanging();
					this._BackBoneId = value;
					this.SendPropertyChanged("BackBoneId");
					this.OnBackBoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FeedId
		{
			get
			{
				return this._FeedId;
			}
			set
			{
				if ((this._FeedId != value))
				{
					this.OnFeedIdChanging(value);
					this.SendPropertyChanging();
					this._FeedId = value;
					this.SendPropertyChanged("FeedId");
					this.OnFeedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PropertyId
		{
			get
			{
				return this._PropertyId;
			}
			set
			{
				if ((this._PropertyId != value))
				{
					this.OnPropertyIdChanging(value);
					this.SendPropertyChanging();
					this._PropertyId = value;
					this.SendPropertyChanged("PropertyId");
					this.OnPropertyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonTrustPosition", DbType="Int NOT NULL")]
		public int PersonTrustPosition
		{
			get
			{
				return this._PersonTrustPosition;
			}
			set
			{
				if ((this._PersonTrustPosition != value))
				{
					this.OnPersonTrustPositionChanging(value);
					this.SendPropertyChanging();
					this._PersonTrustPosition = value;
					this.SendPropertyChanged("PersonTrustPosition");
					this.OnPersonTrustPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MortgageId
		{
			get
			{
				return this._MortgageId;
			}
			set
			{
				if ((this._MortgageId != value))
				{
					this.OnMortgageIdChanging(value);
					this.SendPropertyChanging();
					this._MortgageId = value;
					this.SendPropertyChanged("MortgageId");
					this.OnMortgageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageTrustPosition", DbType="Int NOT NULL")]
		public int MortgageTrustPosition
		{
			get
			{
				return this._MortgageTrustPosition;
			}
			set
			{
				if ((this._MortgageTrustPosition != value))
				{
					this.OnMortgageTrustPositionChanging(value);
					this.SendPropertyChanging();
					this._MortgageTrustPosition = value;
					this.SendPropertyChanged("MortgageTrustPosition");
					this.OnMortgageTrustPositionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mgt.Queries")]
	public partial class Query : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _QueryId;
		
		private System.Guid _UserId;
		
		private string _Tag;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQueryIdChanging(System.Guid value);
    partial void OnQueryIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public Query()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid QueryId
		{
			get
			{
				return this._QueryId;
			}
			set
			{
				if ((this._QueryId != value))
				{
					this.OnQueryIdChanging(value);
					this.SendPropertyChanging();
					this._QueryId = value;
					this.SendPropertyChanged("QueryId");
					this.OnQueryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(30)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _City1;
		
		private string _County;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCity1Changing(string value);
    partial void OnCity1Changed();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    #endregion
		
		public City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="City", Storage="_City1", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string City1
		{
			get
			{
				return this._City1;
			}
			set
			{
				if ((this._City1 != value))
				{
					this.OnCity1Changing(value);
					this.SendPropertyChanging();
					this._City1 = value;
					this.SendPropertyChanged("City1");
					this.OnCity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CosUsers")]
	public partial class CosUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CosUserId;
		
		private string _UserName;
		
		private string _Usermail;
		
		private string _UserPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCosUserIdChanging(System.Guid value);
    partial void OnCosUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUsermailChanging(string value);
    partial void OnUsermailChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    #endregion
		
		public CosUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CosUserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CosUserId
		{
			get
			{
				return this._CosUserId;
			}
			set
			{
				if ((this._CosUserId != value))
				{
					this.OnCosUserIdChanging(value);
					this.SendPropertyChanging();
					this._CosUserId = value;
					this.SendPropertyChanged("CosUserId");
					this.OnCosUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usermail", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Usermail
		{
			get
			{
				return this._Usermail;
			}
			set
			{
				if ((this._Usermail != value))
				{
					this.OnUsermailChanging(value);
					this.SendPropertyChanging();
					this._Usermail = value;
					this.SendPropertyChanged("Usermail");
					this.OnUsermailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Counties")]
	public partial class County
	{
		
		private string _County1;
		
		private string _State;
		
		public County()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="County", Storage="_County1", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string County1
		{
			get
			{
				return this._County1;
			}
			set
			{
				if ((this._County1 != value))
				{
					this._County1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(80)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Counts")]
	public partial class Count : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CountModelID;
		
		private string _Customername;
		
		private System.Guid _CustomerTable;
		
		private System.Guid _BaseTemplate;
		
		private System.Guid _AssignTo;
		
		private System.Nullable<int> _AccessLevel;
		
		private System.Guid _CountOwner;
		
		private EntitySet<CountsUser> _CountsUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountModelIDChanging(System.Guid value);
    partial void OnCountModelIDChanged();
    partial void OnCustomernameChanging(string value);
    partial void OnCustomernameChanged();
    partial void OnCustomerTableChanging(System.Guid value);
    partial void OnCustomerTableChanged();
    partial void OnBaseTemplateChanging(System.Guid value);
    partial void OnBaseTemplateChanged();
    partial void OnAssignToChanging(System.Guid value);
    partial void OnAssignToChanged();
    partial void OnAccessLevelChanging(System.Nullable<int> value);
    partial void OnAccessLevelChanged();
    partial void OnCountOwnerChanging(System.Guid value);
    partial void OnCountOwnerChanged();
    #endregion
		
		public Count()
		{
			this._CountsUsers = new EntitySet<CountsUser>(new Action<CountsUser>(this.attach_CountsUsers), new Action<CountsUser>(this.detach_CountsUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountModelID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CountModelID
		{
			get
			{
				return this._CountModelID;
			}
			set
			{
				if ((this._CountModelID != value))
				{
					this.OnCountModelIDChanging(value);
					this.SendPropertyChanging();
					this._CountModelID = value;
					this.SendPropertyChanged("CountModelID");
					this.OnCountModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customername", DbType="NVarChar(MAX)")]
		public string Customername
		{
			get
			{
				return this._Customername;
			}
			set
			{
				if ((this._Customername != value))
				{
					this.OnCustomernameChanging(value);
					this.SendPropertyChanging();
					this._Customername = value;
					this.SendPropertyChanged("Customername");
					this.OnCustomernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTable", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CustomerTable
		{
			get
			{
				return this._CustomerTable;
			}
			set
			{
				if ((this._CustomerTable != value))
				{
					this.OnCustomerTableChanging(value);
					this.SendPropertyChanging();
					this._CustomerTable = value;
					this.SendPropertyChanged("CustomerTable");
					this.OnCustomerTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseTemplate", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BaseTemplate
		{
			get
			{
				return this._BaseTemplate;
			}
			set
			{
				if ((this._BaseTemplate != value))
				{
					this.OnBaseTemplateChanging(value);
					this.SendPropertyChanging();
					this._BaseTemplate = value;
					this.SendPropertyChanged("BaseTemplate");
					this.OnBaseTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignTo", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AssignTo
		{
			get
			{
				return this._AssignTo;
			}
			set
			{
				if ((this._AssignTo != value))
				{
					this.OnAssignToChanging(value);
					this.SendPropertyChanging();
					this._AssignTo = value;
					this.SendPropertyChanged("AssignTo");
					this.OnAssignToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevel", DbType="Int")]
		public System.Nullable<int> AccessLevel
		{
			get
			{
				return this._AccessLevel;
			}
			set
			{
				if ((this._AccessLevel != value))
				{
					this.OnAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._AccessLevel = value;
					this.SendPropertyChanged("AccessLevel");
					this.OnAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOwner", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CountOwner
		{
			get
			{
				return this._CountOwner;
			}
			set
			{
				if ((this._CountOwner != value))
				{
					this.OnCountOwnerChanging(value);
					this.SendPropertyChanging();
					this._CountOwner = value;
					this.SendPropertyChanged("CountOwner");
					this.OnCountOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Count_CountsUser", Storage="_CountsUsers", ThisKey="CountModelID", OtherKey="CountModel_CountModelID")]
		public EntitySet<CountsUser> CountsUsers
		{
			get
			{
				return this._CountsUsers;
			}
			set
			{
				this._CountsUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CountsUsers(CountsUser entity)
		{
			this.SendPropertyChanging();
			entity.Count = this;
		}
		
		private void detach_CountsUsers(CountsUser entity)
		{
			this.SendPropertyChanging();
			entity.Count = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountsTemplates")]
	public partial class CountsTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CountTemplateID;
		
		private string _Templatename;
		
		private System.Guid _TableFileID;
		
		private System.Guid _CountUserId;
		
		private System.Nullable<int> _accesstype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountTemplateIDChanging(System.Guid value);
    partial void OnCountTemplateIDChanged();
    partial void OnTemplatenameChanging(string value);
    partial void OnTemplatenameChanged();
    partial void OnTableFileIDChanging(System.Guid value);
    partial void OnTableFileIDChanged();
    partial void OnCountUserIdChanging(System.Guid value);
    partial void OnCountUserIdChanged();
    partial void OnaccesstypeChanging(System.Nullable<int> value);
    partial void OnaccesstypeChanged();
    #endregion
		
		public CountsTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountTemplateID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CountTemplateID
		{
			get
			{
				return this._CountTemplateID;
			}
			set
			{
				if ((this._CountTemplateID != value))
				{
					this.OnCountTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._CountTemplateID = value;
					this.SendPropertyChanged("CountTemplateID");
					this.OnCountTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Templatename", DbType="NVarChar(MAX)")]
		public string Templatename
		{
			get
			{
				return this._Templatename;
			}
			set
			{
				if ((this._Templatename != value))
				{
					this.OnTemplatenameChanging(value);
					this.SendPropertyChanging();
					this._Templatename = value;
					this.SendPropertyChanged("Templatename");
					this.OnTemplatenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableFileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TableFileID
		{
			get
			{
				return this._TableFileID;
			}
			set
			{
				if ((this._TableFileID != value))
				{
					this.OnTableFileIDChanging(value);
					this.SendPropertyChanging();
					this._TableFileID = value;
					this.SendPropertyChanged("TableFileID");
					this.OnTableFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CountUserId
		{
			get
			{
				return this._CountUserId;
			}
			set
			{
				if ((this._CountUserId != value))
				{
					this.OnCountUserIdChanging(value);
					this.SendPropertyChanging();
					this._CountUserId = value;
					this.SendPropertyChanged("CountUserId");
					this.OnCountUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accesstype", DbType="Int")]
		public System.Nullable<int> accesstype
		{
			get
			{
				return this._accesstype;
			}
			set
			{
				if ((this._accesstype != value))
				{
					this.OnaccesstypeChanging(value);
					this.SendPropertyChanging();
					this._accesstype = value;
					this.SendPropertyChanged("accesstype");
					this.OnaccesstypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountsUsers")]
	public partial class CountsUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CountUserId;
		
		private string _UserName;
		
		private string _Usermail;
		
		private string _UserPassword;
		
		private System.Nullable<System.Guid> _CountModel_CountModelID;
		
		private EntityRef<Count> _Count;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountUserIdChanging(System.Guid value);
    partial void OnCountUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUsermailChanging(string value);
    partial void OnUsermailChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnCountModel_CountModelIDChanging(System.Nullable<System.Guid> value);
    partial void OnCountModel_CountModelIDChanged();
    #endregion
		
		public CountsUser()
		{
			this._Count = default(EntityRef<Count>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountUserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CountUserId
		{
			get
			{
				return this._CountUserId;
			}
			set
			{
				if ((this._CountUserId != value))
				{
					this.OnCountUserIdChanging(value);
					this.SendPropertyChanging();
					this._CountUserId = value;
					this.SendPropertyChanged("CountUserId");
					this.OnCountUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usermail", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Usermail
		{
			get
			{
				return this._Usermail;
			}
			set
			{
				if ((this._Usermail != value))
				{
					this.OnUsermailChanging(value);
					this.SendPropertyChanging();
					this._Usermail = value;
					this.SendPropertyChanged("Usermail");
					this.OnUsermailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountModel_CountModelID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CountModel_CountModelID
		{
			get
			{
				return this._CountModel_CountModelID;
			}
			set
			{
				if ((this._CountModel_CountModelID != value))
				{
					if (this._Count.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountModel_CountModelIDChanging(value);
					this.SendPropertyChanging();
					this._CountModel_CountModelID = value;
					this.SendPropertyChanged("CountModel_CountModelID");
					this.OnCountModel_CountModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Count_CountsUser", Storage="_Count", ThisKey="CountModel_CountModelID", OtherKey="CountModelID", IsForeignKey=true)]
		public Count Count
		{
			get
			{
				return this._Count.Entity;
			}
			set
			{
				Count previousValue = this._Count.Entity;
				if (((previousValue != value) 
							|| (this._Count.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Count.Entity = null;
						previousValue.CountsUsers.Remove(this);
					}
					this._Count.Entity = value;
					if ((value != null))
					{
						value.CountsUsers.Add(this);
						this._CountModel_CountModelID = value.CountModelID;
					}
					else
					{
						this._CountModel_CountModelID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Count");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HomeValueRanges")]
	public partial class HomeValueRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Label;
		
		private System.Nullable<long> _StartValue;
		
		private System.Nullable<long> _EndValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnStartValueChanging(System.Nullable<long> value);
    partial void OnStartValueChanged();
    partial void OnEndValueChanging(System.Nullable<long> value);
    partial void OnEndValueChanged();
    #endregion
		
		public HomeValueRange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartValue", DbType="BigInt")]
		public System.Nullable<long> StartValue
		{
			get
			{
				return this._StartValue;
			}
			set
			{
				if ((this._StartValue != value))
				{
					this.OnStartValueChanging(value);
					this.SendPropertyChanging();
					this._StartValue = value;
					this.SendPropertyChanged("StartValue");
					this.OnStartValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndValue", DbType="BigInt")]
		public System.Nullable<long> EndValue
		{
			get
			{
				return this._EndValue;
			}
			set
			{
				if ((this._EndValue != value))
				{
					this.OnEndValueChanging(value);
					this.SendPropertyChanging();
					this._EndValue = value;
					this.SendPropertyChanged("EndValue");
					this.OnEndValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterestRateTypes")]
	public partial class InterestRateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InterestRateType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInterestRateType1Changing(string value);
    partial void OnInterestRateType1Changed();
    #endregion
		
		public InterestRateType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="InterestRateType", Storage="_InterestRateType1", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InterestRateType1
		{
			get
			{
				return this._InterestRateType1;
			}
			set
			{
				if ((this._InterestRateType1 != value))
				{
					this.OnInterestRateType1Changing(value);
					this.SendPropertyChanging();
					this._InterestRateType1 = value;
					this.SendPropertyChanged("InterestRateType1");
					this.OnInterestRateType1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanAmountRanges")]
	public partial class LoanAmountRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Label;
		
		private System.Nullable<long> _StartValue;
		
		private System.Nullable<long> _EndValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnStartValueChanging(System.Nullable<long> value);
    partial void OnStartValueChanged();
    partial void OnEndValueChanging(System.Nullable<long> value);
    partial void OnEndValueChanged();
    #endregion
		
		public LoanAmountRange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartValue", DbType="BigInt")]
		public System.Nullable<long> StartValue
		{
			get
			{
				return this._StartValue;
			}
			set
			{
				if ((this._StartValue != value))
				{
					this.OnStartValueChanging(value);
					this.SendPropertyChanging();
					this._StartValue = value;
					this.SendPropertyChanged("StartValue");
					this.OnStartValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndValue", DbType="BigInt")]
		public System.Nullable<long> EndValue
		{
			get
			{
				return this._EndValue;
			}
			set
			{
				if ((this._EndValue != value))
				{
					this.OnEndValueChanging(value);
					this.SendPropertyChanging();
					this._EndValue = value;
					this.SendPropertyChanged("EndValue");
					this.OnEndValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanToValueRanges")]
	public partial class LoanToValueRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Label;
		
		private System.Nullable<float> _StartValue;
		
		private System.Nullable<float> _EndValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnStartValueChanging(System.Nullable<float> value);
    partial void OnStartValueChanged();
    partial void OnEndValueChanging(System.Nullable<float> value);
    partial void OnEndValueChanged();
    #endregion
		
		public LoanToValueRange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartValue", DbType="Real")]
		public System.Nullable<float> StartValue
		{
			get
			{
				return this._StartValue;
			}
			set
			{
				if ((this._StartValue != value))
				{
					this.OnStartValueChanging(value);
					this.SendPropertyChanging();
					this._StartValue = value;
					this.SendPropertyChanged("StartValue");
					this.OnStartValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndValue", DbType="Real")]
		public System.Nullable<float> EndValue
		{
			get
			{
				return this._EndValue;
			}
			set
			{
				if ((this._EndValue != value))
				{
					this.OnEndValueChanging(value);
					this.SendPropertyChanging();
					this._EndValue = value;
					this.SendPropertyChanged("EndValue");
					this.OnEndValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanTypes")]
	public partial class LoanType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MortgageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMortgageTypeChanging(string value);
    partial void OnMortgageTypeChanged();
    #endregion
		
		public LoanType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageType", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MortgageType
		{
			get
			{
				return this._MortgageType;
			}
			set
			{
				if ((this._MortgageType != value))
				{
					this.OnMortgageTypeChanging(value);
					this.SendPropertyChanging();
					this._MortgageType = value;
					this.SendPropertyChanged("MortgageType");
					this.OnMortgageTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mortgages")]
	public partial class Mortgage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MortgageId;
		
		private string _LenderName;
		
		private System.Nullable<long> _LoanAmount;
		
		private string _LoanAmountRange;
		
		private System.Nullable<System.DateTime> _OriginationDate;
		
		private System.Nullable<System.DateTime> _RecordingDate;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private System.Nullable<int> _MortgageTerm;
		
		private string _LoanType;
		
		private string _MortgageType;
		
		private System.Nullable<double> _InterestRate;
		
		private string _InterestRateType;
		
		private System.Nullable<double> _LoanToValue;
		
		private string _LoanToValueRange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMortgageIdChanging(System.Guid value);
    partial void OnMortgageIdChanged();
    partial void OnLenderNameChanging(string value);
    partial void OnLenderNameChanged();
    partial void OnLoanAmountChanging(System.Nullable<long> value);
    partial void OnLoanAmountChanged();
    partial void OnLoanAmountRangeChanging(string value);
    partial void OnLoanAmountRangeChanged();
    partial void OnOriginationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOriginationDateChanged();
    partial void OnRecordingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecordingDateChanged();
    partial void OnMaturityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMaturityDateChanged();
    partial void OnMortgageTermChanging(System.Nullable<int> value);
    partial void OnMortgageTermChanged();
    partial void OnLoanTypeChanging(string value);
    partial void OnLoanTypeChanged();
    partial void OnMortgageTypeChanging(string value);
    partial void OnMortgageTypeChanged();
    partial void OnInterestRateChanging(System.Nullable<double> value);
    partial void OnInterestRateChanged();
    partial void OnInterestRateTypeChanging(string value);
    partial void OnInterestRateTypeChanged();
    partial void OnLoanToValueChanging(System.Nullable<double> value);
    partial void OnLoanToValueChanged();
    partial void OnLoanToValueRangeChanging(string value);
    partial void OnLoanToValueRangeChanged();
    #endregion
		
		public Mortgage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MortgageId
		{
			get
			{
				return this._MortgageId;
			}
			set
			{
				if ((this._MortgageId != value))
				{
					this.OnMortgageIdChanging(value);
					this.SendPropertyChanging();
					this._MortgageId = value;
					this.SendPropertyChanged("MortgageId");
					this.OnMortgageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LenderName", DbType="NVarChar(80)")]
		public string LenderName
		{
			get
			{
				return this._LenderName;
			}
			set
			{
				if ((this._LenderName != value))
				{
					this.OnLenderNameChanging(value);
					this.SendPropertyChanging();
					this._LenderName = value;
					this.SendPropertyChanged("LenderName");
					this.OnLenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="BigInt")]
		public System.Nullable<long> LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmountRange", DbType="NVarChar(80)")]
		public string LoanAmountRange
		{
			get
			{
				return this._LoanAmountRange;
			}
			set
			{
				if ((this._LoanAmountRange != value))
				{
					this.OnLoanAmountRangeChanging(value);
					this.SendPropertyChanging();
					this._LoanAmountRange = value;
					this.SendPropertyChanged("LoanAmountRange");
					this.OnLoanAmountRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginationDate", DbType="Date")]
		public System.Nullable<System.DateTime> OriginationDate
		{
			get
			{
				return this._OriginationDate;
			}
			set
			{
				if ((this._OriginationDate != value))
				{
					this.OnOriginationDateChanging(value);
					this.SendPropertyChanging();
					this._OriginationDate = value;
					this.SendPropertyChanged("OriginationDate");
					this.OnOriginationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordingDate", DbType="Date")]
		public System.Nullable<System.DateTime> RecordingDate
		{
			get
			{
				return this._RecordingDate;
			}
			set
			{
				if ((this._RecordingDate != value))
				{
					this.OnRecordingDateChanging(value);
					this.SendPropertyChanging();
					this._RecordingDate = value;
					this.SendPropertyChanged("RecordingDate");
					this.OnRecordingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageTerm", DbType="Int")]
		public System.Nullable<int> MortgageTerm
		{
			get
			{
				return this._MortgageTerm;
			}
			set
			{
				if ((this._MortgageTerm != value))
				{
					this.OnMortgageTermChanging(value);
					this.SendPropertyChanging();
					this._MortgageTerm = value;
					this.SendPropertyChanged("MortgageTerm");
					this.OnMortgageTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanType", DbType="NVarChar(80)")]
		public string LoanType
		{
			get
			{
				return this._LoanType;
			}
			set
			{
				if ((this._LoanType != value))
				{
					this.OnLoanTypeChanging(value);
					this.SendPropertyChanging();
					this._LoanType = value;
					this.SendPropertyChanged("LoanType");
					this.OnLoanTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageType", DbType="NVarChar(80)")]
		public string MortgageType
		{
			get
			{
				return this._MortgageType;
			}
			set
			{
				if ((this._MortgageType != value))
				{
					this.OnMortgageTypeChanging(value);
					this.SendPropertyChanging();
					this._MortgageType = value;
					this.SendPropertyChanged("MortgageType");
					this.OnMortgageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRate", DbType="Float")]
		public System.Nullable<double> InterestRate
		{
			get
			{
				return this._InterestRate;
			}
			set
			{
				if ((this._InterestRate != value))
				{
					this.OnInterestRateChanging(value);
					this.SendPropertyChanging();
					this._InterestRate = value;
					this.SendPropertyChanged("InterestRate");
					this.OnInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRateType", DbType="NVarChar(80)")]
		public string InterestRateType
		{
			get
			{
				return this._InterestRateType;
			}
			set
			{
				if ((this._InterestRateType != value))
				{
					this.OnInterestRateTypeChanging(value);
					this.SendPropertyChanging();
					this._InterestRateType = value;
					this.SendPropertyChanged("InterestRateType");
					this.OnInterestRateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanToValue", DbType="Float")]
		public System.Nullable<double> LoanToValue
		{
			get
			{
				return this._LoanToValue;
			}
			set
			{
				if ((this._LoanToValue != value))
				{
					this.OnLoanToValueChanging(value);
					this.SendPropertyChanging();
					this._LoanToValue = value;
					this.SendPropertyChanged("LoanToValue");
					this.OnLoanToValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanToValueRange", DbType="NVarChar(80)")]
		public string LoanToValueRange
		{
			get
			{
				return this._LoanToValueRange;
			}
			set
			{
				if ((this._LoanToValueRange != value))
				{
					this.OnLoanToValueRangeChanging(value);
					this.SendPropertyChanging();
					this._LoanToValueRange = value;
					this.SendPropertyChanged("LoanToValueRange");
					this.OnLoanToValueRangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MortgateTypes")]
	public partial class MortgateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MortgageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMortgageTypeChanging(string value);
    partial void OnMortgageTypeChanged();
    #endregion
		
		public MortgateType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageType", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MortgageType
		{
			get
			{
				return this._MortgageType;
			}
			set
			{
				if ((this._MortgageType != value))
				{
					this.OnMortgageTypeChanging(value);
					this.SendPropertyChanging();
					this._MortgageType = value;
					this.SendPropertyChanged("MortgageType");
					this.OnMortgageTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persons")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PersonId;
		
		private string _FullName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FullAddress;
		
		private string _HouseNumber;
		
		private string _StreetDirection;
		
		private string _Street;
		
		private string _Apartment;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _FullZip;
		
		private string _RouteCode;
		
		private System.Nullable<long> _HomeValue;
		
		private string _HomeValueRange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFullAddressChanging(string value);
    partial void OnFullAddressChanged();
    partial void OnHouseNumberChanging(string value);
    partial void OnHouseNumberChanged();
    partial void OnStreetDirectionChanging(string value);
    partial void OnStreetDirectionChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnApartmentChanging(string value);
    partial void OnApartmentChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnFullZipChanging(string value);
    partial void OnFullZipChanged();
    partial void OnRouteCodeChanging(string value);
    partial void OnRouteCodeChanged();
    partial void OnHomeValueChanging(System.Nullable<long> value);
    partial void OnHomeValueChanged();
    partial void OnHomeValueRangeChanging(string value);
    partial void OnHomeValueRangeChanged();
    #endregion
		
		public Person()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(80)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(80)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(80)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullAddress", DbType="NVarChar(80)")]
		public string FullAddress
		{
			get
			{
				return this._FullAddress;
			}
			set
			{
				if ((this._FullAddress != value))
				{
					this.OnFullAddressChanging(value);
					this.SendPropertyChanging();
					this._FullAddress = value;
					this.SendPropertyChanged("FullAddress");
					this.OnFullAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseNumber", DbType="NVarChar(80)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this.OnHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._HouseNumber = value;
					this.SendPropertyChanged("HouseNumber");
					this.OnHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetDirection", DbType="NVarChar(80)")]
		public string StreetDirection
		{
			get
			{
				return this._StreetDirection;
			}
			set
			{
				if ((this._StreetDirection != value))
				{
					this.OnStreetDirectionChanging(value);
					this.SendPropertyChanging();
					this._StreetDirection = value;
					this.SendPropertyChanged("StreetDirection");
					this.OnStreetDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(80)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apartment", DbType="NVarChar(80)")]
		public string Apartment
		{
			get
			{
				return this._Apartment;
			}
			set
			{
				if ((this._Apartment != value))
				{
					this.OnApartmentChanging(value);
					this.SendPropertyChanging();
					this._Apartment = value;
					this.SendPropertyChanged("Apartment");
					this.OnApartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(80)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(80)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(80)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullZip", DbType="NVarChar(80)")]
		public string FullZip
		{
			get
			{
				return this._FullZip;
			}
			set
			{
				if ((this._FullZip != value))
				{
					this.OnFullZipChanging(value);
					this.SendPropertyChanging();
					this._FullZip = value;
					this.SendPropertyChanged("FullZip");
					this.OnFullZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteCode", DbType="NVarChar(80)")]
		public string RouteCode
		{
			get
			{
				return this._RouteCode;
			}
			set
			{
				if ((this._RouteCode != value))
				{
					this.OnRouteCodeChanging(value);
					this.SendPropertyChanging();
					this._RouteCode = value;
					this.SendPropertyChanged("RouteCode");
					this.OnRouteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeValue", DbType="BigInt")]
		public System.Nullable<long> HomeValue
		{
			get
			{
				return this._HomeValue;
			}
			set
			{
				if ((this._HomeValue != value))
				{
					this.OnHomeValueChanging(value);
					this.SendPropertyChanging();
					this._HomeValue = value;
					this.SendPropertyChanged("HomeValue");
					this.OnHomeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeValueRange", DbType="NVarChar(80)")]
		public string HomeValueRange
		{
			get
			{
				return this._HomeValueRange;
			}
			set
			{
				if ((this._HomeValueRange != value))
				{
					this.OnHomeValueRangeChanging(value);
					this.SendPropertyChanging();
					this._HomeValueRange = value;
					this.SendPropertyChanged("HomeValueRange");
					this.OnHomeValueRangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Property")]
	public partial class Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PropertyId;
		
		private string _FederalIPSCode;
		
		private string _AcessorParcelNumber;
		
		private string _County;
		
		private string _LandUseCode;
		
		private System.Nullable<bool> _OwnerOccupant;
		
		private string _FullAddress;
		
		private string _HouseNumber;
		
		private string _StreetDirection;
		
		private string _Street;
		
		private string _Apartment;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _FullZip;
		
		private string _CarrierRouteCode;
		
		private System.Nullable<System.DateTime> _SaleDate;
		
		private System.Nullable<System.DateTime> _SaleRecordingDate;
		
		private System.Nullable<long> _SalePrice;
		
		private System.Nullable<long> _PropertyValue;
		
		private string _PropertyValueRange;
		
		private System.Nullable<double> _CombinedLoanToValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyIdChanging(System.Guid value);
    partial void OnPropertyIdChanged();
    partial void OnFederalIPSCodeChanging(string value);
    partial void OnFederalIPSCodeChanged();
    partial void OnAcessorParcelNumberChanging(string value);
    partial void OnAcessorParcelNumberChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnLandUseCodeChanging(string value);
    partial void OnLandUseCodeChanged();
    partial void OnOwnerOccupantChanging(System.Nullable<bool> value);
    partial void OnOwnerOccupantChanged();
    partial void OnFullAddressChanging(string value);
    partial void OnFullAddressChanged();
    partial void OnHouseNumberChanging(string value);
    partial void OnHouseNumberChanged();
    partial void OnStreetDirectionChanging(string value);
    partial void OnStreetDirectionChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnApartmentChanging(string value);
    partial void OnApartmentChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnFullZipChanging(string value);
    partial void OnFullZipChanged();
    partial void OnCarrierRouteCodeChanging(string value);
    partial void OnCarrierRouteCodeChanged();
    partial void OnSaleDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleDateChanged();
    partial void OnSaleRecordingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleRecordingDateChanged();
    partial void OnSalePriceChanging(System.Nullable<long> value);
    partial void OnSalePriceChanged();
    partial void OnPropertyValueChanging(System.Nullable<long> value);
    partial void OnPropertyValueChanged();
    partial void OnPropertyValueRangeChanging(string value);
    partial void OnPropertyValueRangeChanged();
    partial void OnCombinedLoanToValueChanging(System.Nullable<double> value);
    partial void OnCombinedLoanToValueChanged();
    #endregion
		
		public Property()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PropertyId
		{
			get
			{
				return this._PropertyId;
			}
			set
			{
				if ((this._PropertyId != value))
				{
					this.OnPropertyIdChanging(value);
					this.SendPropertyChanging();
					this._PropertyId = value;
					this.SendPropertyChanged("PropertyId");
					this.OnPropertyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederalIPSCode", DbType="NVarChar(80)")]
		public string FederalIPSCode
		{
			get
			{
				return this._FederalIPSCode;
			}
			set
			{
				if ((this._FederalIPSCode != value))
				{
					this.OnFederalIPSCodeChanging(value);
					this.SendPropertyChanging();
					this._FederalIPSCode = value;
					this.SendPropertyChanged("FederalIPSCode");
					this.OnFederalIPSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcessorParcelNumber", DbType="NVarChar(80)")]
		public string AcessorParcelNumber
		{
			get
			{
				return this._AcessorParcelNumber;
			}
			set
			{
				if ((this._AcessorParcelNumber != value))
				{
					this.OnAcessorParcelNumberChanging(value);
					this.SendPropertyChanging();
					this._AcessorParcelNumber = value;
					this.SendPropertyChanged("AcessorParcelNumber");
					this.OnAcessorParcelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="NVarChar(80)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandUseCode", DbType="NVarChar(80)")]
		public string LandUseCode
		{
			get
			{
				return this._LandUseCode;
			}
			set
			{
				if ((this._LandUseCode != value))
				{
					this.OnLandUseCodeChanging(value);
					this.SendPropertyChanging();
					this._LandUseCode = value;
					this.SendPropertyChanged("LandUseCode");
					this.OnLandUseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerOccupant", DbType="Bit")]
		public System.Nullable<bool> OwnerOccupant
		{
			get
			{
				return this._OwnerOccupant;
			}
			set
			{
				if ((this._OwnerOccupant != value))
				{
					this.OnOwnerOccupantChanging(value);
					this.SendPropertyChanging();
					this._OwnerOccupant = value;
					this.SendPropertyChanged("OwnerOccupant");
					this.OnOwnerOccupantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullAddress", DbType="NVarChar(80)")]
		public string FullAddress
		{
			get
			{
				return this._FullAddress;
			}
			set
			{
				if ((this._FullAddress != value))
				{
					this.OnFullAddressChanging(value);
					this.SendPropertyChanging();
					this._FullAddress = value;
					this.SendPropertyChanged("FullAddress");
					this.OnFullAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseNumber", DbType="NVarChar(80)")]
		public string HouseNumber
		{
			get
			{
				return this._HouseNumber;
			}
			set
			{
				if ((this._HouseNumber != value))
				{
					this.OnHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._HouseNumber = value;
					this.SendPropertyChanged("HouseNumber");
					this.OnHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetDirection", DbType="NVarChar(80)")]
		public string StreetDirection
		{
			get
			{
				return this._StreetDirection;
			}
			set
			{
				if ((this._StreetDirection != value))
				{
					this.OnStreetDirectionChanging(value);
					this.SendPropertyChanging();
					this._StreetDirection = value;
					this.SendPropertyChanged("StreetDirection");
					this.OnStreetDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(80)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apartment", DbType="NVarChar(80)")]
		public string Apartment
		{
			get
			{
				return this._Apartment;
			}
			set
			{
				if ((this._Apartment != value))
				{
					this.OnApartmentChanging(value);
					this.SendPropertyChanging();
					this._Apartment = value;
					this.SendPropertyChanged("Apartment");
					this.OnApartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(80)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(80)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(80)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullZip", DbType="NVarChar(80)")]
		public string FullZip
		{
			get
			{
				return this._FullZip;
			}
			set
			{
				if ((this._FullZip != value))
				{
					this.OnFullZipChanging(value);
					this.SendPropertyChanging();
					this._FullZip = value;
					this.SendPropertyChanged("FullZip");
					this.OnFullZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierRouteCode", DbType="NVarChar(80)")]
		public string CarrierRouteCode
		{
			get
			{
				return this._CarrierRouteCode;
			}
			set
			{
				if ((this._CarrierRouteCode != value))
				{
					this.OnCarrierRouteCodeChanging(value);
					this.SendPropertyChanging();
					this._CarrierRouteCode = value;
					this.SendPropertyChanged("CarrierRouteCode");
					this.OnCarrierRouteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleDate", DbType="Date")]
		public System.Nullable<System.DateTime> SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this.OnSaleDateChanging(value);
					this.SendPropertyChanging();
					this._SaleDate = value;
					this.SendPropertyChanged("SaleDate");
					this.OnSaleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRecordingDate", DbType="Date")]
		public System.Nullable<System.DateTime> SaleRecordingDate
		{
			get
			{
				return this._SaleRecordingDate;
			}
			set
			{
				if ((this._SaleRecordingDate != value))
				{
					this.OnSaleRecordingDateChanging(value);
					this.SendPropertyChanging();
					this._SaleRecordingDate = value;
					this.SendPropertyChanged("SaleRecordingDate");
					this.OnSaleRecordingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="BigInt")]
		public System.Nullable<long> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="BigInt")]
		public System.Nullable<long> PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueRange", DbType="NVarChar(80)")]
		public string PropertyValueRange
		{
			get
			{
				return this._PropertyValueRange;
			}
			set
			{
				if ((this._PropertyValueRange != value))
				{
					this.OnPropertyValueRangeChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueRange = value;
					this.SendPropertyChanged("PropertyValueRange");
					this.OnPropertyValueRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombinedLoanToValue", DbType="Float")]
		public System.Nullable<double> CombinedLoanToValue
		{
			get
			{
				return this._CombinedLoanToValue;
			}
			set
			{
				if ((this._CombinedLoanToValue != value))
				{
					this.OnCombinedLoanToValueChanging(value);
					this.SendPropertyChanging();
					this._CombinedLoanToValue = value;
					this.SendPropertyChanged("CombinedLoanToValue");
					this.OnCombinedLoanToValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PropertyValueRanges")]
	public partial class PropertyValueRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Label;
		
		private System.Nullable<long> _StartValue;
		
		private System.Nullable<long> _EndValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnStartValueChanging(System.Nullable<long> value);
    partial void OnStartValueChanged();
    partial void OnEndValueChanging(System.Nullable<long> value);
    partial void OnEndValueChanged();
    #endregion
		
		public PropertyValueRange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartValue", DbType="BigInt")]
		public System.Nullable<long> StartValue
		{
			get
			{
				return this._StartValue;
			}
			set
			{
				if ((this._StartValue != value))
				{
					this.OnStartValueChanging(value);
					this.SendPropertyChanging();
					this._StartValue = value;
					this.SendPropertyChanged("StartValue");
					this.OnStartValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndValue", DbType="BigInt")]
		public System.Nullable<long> EndValue
		{
			get
			{
				return this._EndValue;
			}
			set
			{
				if ((this._EndValue != value))
				{
					this.OnEndValueChanging(value);
					this.SendPropertyChanging();
					this._EndValue = value;
					this.SendPropertyChanged("EndValue");
					this.OnEndValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State
	{
		
		private string _Name;
		
		public State()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StreetDirections")]
	public partial class StreetDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Direction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectionChanging(string value);
    partial void OnDirectionChanged();
    #endregion
		
		public StreetDirection()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableFiles")]
	public partial class TableFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _FileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public TableFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(MAX)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mgt.FeedDetails")]
	public partial class FeedDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FeedId;
		
		private string _FeedFile;
		
		private System.DateTime _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedIdChanging(System.Guid value);
    partial void OnFeedIdChanged();
    partial void OnFeedFileChanging(string value);
    partial void OnFeedFileChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public FeedDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FeedId
		{
			get
			{
				return this._FeedId;
			}
			set
			{
				if ((this._FeedId != value))
				{
					this.OnFeedIdChanging(value);
					this.SendPropertyChanging();
					this._FeedId = value;
					this.SendPropertyChanged("FeedId");
					this.OnFeedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedFile", DbType="NVarChar(MAX)")]
		public string FeedFile
		{
			get
			{
				return this._FeedFile;
			}
			set
			{
				if ((this._FeedFile != value))
				{
					this.OnFeedFileChanging(value);
					this.SendPropertyChanging();
					this._FeedFile = value;
					this.SendPropertyChanged("FeedFile");
					this.OnFeedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mgt.Feeds")]
	public partial class Feed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FeedId;
		
		private System.Guid _BackBoneId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedIdChanging(System.Guid value);
    partial void OnFeedIdChanged();
    partial void OnBackBoneIdChanging(System.Guid value);
    partial void OnBackBoneIdChanged();
    #endregion
		
		public Feed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FeedId
		{
			get
			{
				return this._FeedId;
			}
			set
			{
				if ((this._FeedId != value))
				{
					this.OnFeedIdChanging(value);
					this.SendPropertyChanging();
					this._FeedId = value;
					this.SendPropertyChanged("FeedId");
					this.OnFeedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackBoneId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BackBoneId
		{
			get
			{
				return this._BackBoneId;
			}
			set
			{
				if ((this._BackBoneId != value))
				{
					this.OnBackBoneIdChanging(value);
					this.SendPropertyChanging();
					this._BackBoneId = value;
					this.SendPropertyChanged("BackBoneId");
					this.OnBackBoneIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.O2CVQueries")]
	public partial class O2CVQuery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QuerySql;
		
		private string _QueryName;
		
		private long _Id;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private string _Description;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		private EntitySet<O2CVQueryCriteria> _O2CVQueryCriterias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuerySqlChanging(string value);
    partial void OnQuerySqlChanged();
    partial void OnQueryNameChanging(string value);
    partial void OnQueryNameChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public O2CVQuery()
		{
			this._O2CVQueryCriterias = new EntitySet<O2CVQueryCriteria>(new Action<O2CVQueryCriteria>(this.attach_O2CVQueryCriterias), new Action<O2CVQueryCriteria>(this.detach_O2CVQueryCriterias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuerySql", DbType="NVarChar(MAX)")]
		public string QuerySql
		{
			get
			{
				return this._QuerySql;
			}
			set
			{
				if ((this._QuerySql != value))
				{
					this.OnQuerySqlChanging(value);
					this.SendPropertyChanging();
					this._QuerySql = value;
					this.SendPropertyChanged("QuerySql");
					this.OnQuerySqlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string QueryName
		{
			get
			{
				return this._QueryName;
			}
			set
			{
				if ((this._QueryName != value))
				{
					this.OnQueryNameChanging(value);
					this.SendPropertyChanging();
					this._QueryName = value;
					this.SendPropertyChanged("QueryName");
					this.OnQueryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(50)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="O2CVQuery_O2CVQueryCriteria", Storage="_O2CVQueryCriterias", ThisKey="Id", OtherKey="CriteriaParentQueryId")]
		public EntitySet<O2CVQueryCriteria> O2CVQueryCriterias
		{
			get
			{
				return this._O2CVQueryCriterias;
			}
			set
			{
				this._O2CVQueryCriterias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_O2CVQueryCriterias(O2CVQueryCriteria entity)
		{
			this.SendPropertyChanging();
			entity.O2CVQuery = this;
		}
		
		private void detach_O2CVQueryCriterias(O2CVQueryCriteria entity)
		{
			this.SendPropertyChanging();
			entity.O2CVQuery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.O2CVQueryCriteria")]
	public partial class O2CVQueryCriteria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Sequence;
		
		private string _TableColumn;
		
		private string _TableName;
		
		private string _CompareValue;
		
		private string _CompareOperator;
		
		private string _Description;
		
		private System.Nullable<long> _CriteriaParentQueryId;
		
		private string _Name;
		
		private System.Nullable<bool> _Disabled;
		
		private System.Nullable<System.DateTime> _DisabledDate;
		
		private string _DisableBy;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<O2CVQuery> _O2CVQuery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnTableColumnChanging(string value);
    partial void OnTableColumnChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnCompareValueChanging(string value);
    partial void OnCompareValueChanged();
    partial void OnCompareOperatorChanging(string value);
    partial void OnCompareOperatorChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCriteriaParentQueryIdChanging(System.Nullable<long> value);
    partial void OnCriteriaParentQueryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisabledChanging(System.Nullable<bool> value);
    partial void OnDisabledChanged();
    partial void OnDisabledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDisabledDateChanged();
    partial void OnDisableByChanging(string value);
    partial void OnDisableByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public O2CVQueryCriteria()
		{
			this._O2CVQuery = default(EntityRef<O2CVQuery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableColumn", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableColumn
		{
			get
			{
				return this._TableColumn;
			}
			set
			{
				if ((this._TableColumn != value))
				{
					this.OnTableColumnChanging(value);
					this.SendPropertyChanging();
					this._TableColumn = value;
					this.SendPropertyChanged("TableColumn");
					this.OnTableColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareValue", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CompareValue
		{
			get
			{
				return this._CompareValue;
			}
			set
			{
				if ((this._CompareValue != value))
				{
					this.OnCompareValueChanging(value);
					this.SendPropertyChanging();
					this._CompareValue = value;
					this.SendPropertyChanged("CompareValue");
					this.OnCompareValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareOperator", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompareOperator
		{
			get
			{
				return this._CompareOperator;
			}
			set
			{
				if ((this._CompareOperator != value))
				{
					this.OnCompareOperatorChanging(value);
					this.SendPropertyChanging();
					this._CompareOperator = value;
					this.SendPropertyChanged("CompareOperator");
					this.OnCompareOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriteriaParentQueryId", DbType="BigInt")]
		public System.Nullable<long> CriteriaParentQueryId
		{
			get
			{
				return this._CriteriaParentQueryId;
			}
			set
			{
				if ((this._CriteriaParentQueryId != value))
				{
					if (this._O2CVQuery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCriteriaParentQueryIdChanging(value);
					this.SendPropertyChanging();
					this._CriteriaParentQueryId = value;
					this.SendPropertyChanged("CriteriaParentQueryId");
					this.OnCriteriaParentQueryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit")]
		public System.Nullable<bool> Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisabledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisabledDate
		{
			get
			{
				return this._DisabledDate;
			}
			set
			{
				if ((this._DisabledDate != value))
				{
					this.OnDisabledDateChanging(value);
					this.SendPropertyChanging();
					this._DisabledDate = value;
					this.SendPropertyChanged("DisabledDate");
					this.OnDisabledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableBy", DbType="NVarChar(50)")]
		public string DisableBy
		{
			get
			{
				return this._DisableBy;
			}
			set
			{
				if ((this._DisableBy != value))
				{
					this.OnDisableByChanging(value);
					this.SendPropertyChanging();
					this._DisableBy = value;
					this.SendPropertyChanged("DisableBy");
					this.OnDisableByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="O2CVQuery_O2CVQueryCriteria", Storage="_O2CVQuery", ThisKey="CriteriaParentQueryId", OtherKey="Id", IsForeignKey=true)]
		public O2CVQuery O2CVQuery
		{
			get
			{
				return this._O2CVQuery.Entity;
			}
			set
			{
				O2CVQuery previousValue = this._O2CVQuery.Entity;
				if (((previousValue != value) 
							|| (this._O2CVQuery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._O2CVQuery.Entity = null;
						previousValue.O2CVQueryCriterias.Remove(this);
					}
					this._O2CVQuery.Entity = value;
					if ((value != null))
					{
						value.O2CVQueryCriterias.Add(this);
						this._CriteriaParentQueryId = value.Id;
					}
					else
					{
						this._CriteriaParentQueryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("O2CVQuery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
